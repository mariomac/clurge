
#!/usr/bin/env Rscript

args <- commandArgs(trailingOnly = TRUE)

if (length(args) != 6){
    cat("ERROR IN PASSING PARAMETERS: EXPECTED 6")
    stop("ERROR IN PASSING PARAMETERS: EXPECTED 6")
}

if("tsDyn" %in% rownames(installed.packages()) == FALSE) {install.packages("tsDyn", dependencies = TRUE, repos="http://cran.us.r-project.org")}
library("tsDyn")

file = args[1]
type = args[2]
NUM_FORECAST = strtoi(args[3])
NOW = strtoi(args[4])
MAX = strtoi(args[5])
file_output = args[6]
#
#file = "/home/mcanuto/BSC/Projects/RenewIT/RES_2015_short.csv"
# type = "green"
# NUM_FORECAST = window #Number of predicted values
# MAX = 100 #Max number of past values to consider
# NOW = 2 #Current time index


FREQUENCY = 1

data <- read.csv(file, check.names=FALSE)
data <- head(data, MAX)

data <- data[complete.cases(data), ]
switch(type,
green = { TYPE = "Energia.renovable"},
total = { TYPE = "Energia.total"},
RES = { TYPE = "RES"})

power.ts = data[,TYPE]power.ts = data$power

sensor<- ts(power.ts,frequency=FREQUENCY)
mod.nnet <- linear(sensor, m=FREQUENCY)
fcast.values = predict(mod.nnet, n.ahead = NUM_FORECAST)
fcast.values[fcast.values < 0] <- 0

time = seq(from=NOW+FREQUENCY, to=NOW+NUM_FORECAST)
result_file = data.frame(cbind(timestamp = time, value = fcast.values))
#cat(fcast.values, sep = "\n")

write.csv(result_file, file = file_output ,row.names=FALSE)

